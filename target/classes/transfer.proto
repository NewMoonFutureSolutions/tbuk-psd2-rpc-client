syntax = "proto3";

//option java_multiple_files = true;
package com.tbuk.grpc.psd2Transfer;

import "google/api/annotations.proto";



message TransferRequest {
    string transferId = 1 ;
    Money requestedAmount = 2 ;
    Money transactionAmount = 3 ;
    BankAccount source = 4 ;
    repeated Destination destinations = 5 ;
    //string feeResponsibility = 6 ;
    string description=6;

}

message TransferResponse {
    string transaction_id = 1;
    StatusCode status = 2;
    string status_description = 3;
}

message PaymentStatusRequest{
    string transferId=1;
}
message TransferStatusResponse {
    string TransactionStatus=1;
}
//*****

message BankAccount {

    message Token {
        string member_id = 1;
        string account_id = 2;
    }


    // Source account managed by a coop bank
    message Bank {
        string bank_id = 1;
    }

    // SWIFT transfer
    message Swift {
        string bic = 1;     // BIC code AAAABBCCDD
        string account = 2;
    }

    // SEPA transfer.
    message Sepa {
        string iban = 1;    // International Bank Account Number
        string bic = 2;     // Bic code. Optional, except for non EEA countries
    }

    // ACH transfer
    message Ach {
        string routing = 1; // Routing number
        string account = 2;
    }

    // Faster Payments Service transfer (UK)
    message FasterPayments {
        string sort_code = 1;
        string account_number = 2;
    }

    // Custom authorization
    message Custom {
        string bank_id = 1;
        string payload = 2;
    }

    oneof account {
        Token token = 1;
        Swift swift = 2;
        Sepa sepa = 3;
        Ach ach = 4;
        Bank bank = 5;
        FasterPayments faster_payments = 6;
        Custom custom = 7;
    }

}
message Destination{
    BankAccount account = 1; //
    CustomerData customer_data = 2;
}
message CustomerData{
    repeated string legal_names = 1;
    Address address = 2;
}

message Address {
        string house_number = 1;
        string house_name = 2;
        string flats = 3;
        string street = 4;
        string place = 5;
        string post_code = 6;
        string city = 7;
        string country = 8;// UK
        string full = 9;

    }

message Money {
    string currency = 1; // "USD" or "EUR".
    string value = 2;    //
}

enum StatusCode {
    INVALID_STATUS = 0;                   // invalid status, reserved
    PROCESSING = 1;                       // transaction is being processed
    SUCCESS = 2;                          // transaction succeeded
    FAILURE_CANCELED = 3;                 // transaction has been canceled, rolled back
    FAILURE_INSUFFICIENT_FUNDS = 4;       // the transaction failed due to insufficient funds
    FAILURE_INVALID_CURRENCY = 5;         // the transaction failed due to currency mismatch
    FAILURE_PERMISSION_DENIED = 6;        // the transaction failed due to access violation
    FAILURE_QUOTE_EXPIRED = 7;            // the transaction failed because the quote has expired
    FAILURE_INVALID_AMOUNT = 8;           // the transaction failed due to invalid amount
    FAILURE_INVALID_QUOTE = 9;            // the transaction failed due to invalid quote (wrong fx rate)
    FAILURE_EXPIRED = 10;                 // the transaction failed to complete within alotted time
    FAILURE_GENERIC = 11;                 // the transaction has failed due to other reasons
    FAILURE_ACCOUNT_NOT_FOUND = 12;       // the account is not found
    FAILURE_TRANSACTION_NOT_FOUND = 13;   // the transaction has failed due to other reasons
    FAILURE_UNSUPPORTED_DESTINATION = 14; // the transaction failed because bank does not support requested destination
    SENT = 15;                            // legacy transfers only: the transaction has been sent but has not been acknowledged by the bank
}

service TransferService {
    rpc transfer (TransferRequest) returns (TransferResponse){
        option (google.api.http) = {
      post: "/transfers"
      body: "PaymentRequest"
    };
    }
    rpc transferStatus (PaymentStatusRequest) returns (TransferStatusResponse){
        option (google.api.http) = {
      get: "/transfers/{transferId}/status"

    };
    }
}

